// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  image             String?  @db.VarChar(50)
  name              String   @db.VarChar(100)
  email             String   @unique
  phone             String   @db.VarChar(15)
  address           String?  @db.Text
  registration_date DateTime @db.DateTime()
  password          String   @db.VarChar(100)
  jwtToken          String?  @map("jwt_token") @db.Text
  notificationToken String?  @map("notification_token") @db.Text

  employees Employee[]
  suppliers Supplier[]
  customers Customer[]

  @@map("user")
}

model Employee {
  id      Int     @id @default(autoincrement())
  image   String? @db.VarChar(50)
  name    String  @db.VarChar(100)
  email   String  @db.VarChar(100)
  address String? @db.Text
  pin     String  @db.VarChar(20)

  User   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  @@map("employee")
}

model Supplier {
  id            Int     @id @default(autoincrement())
  name          String  @db.VarChar(100)
  phone         String? @db.VarChar(15)
  contactPerson String? @map("contact_person") @db.VarChar(100)
  address       String? @db.Text

  User   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  @@map("supplier")
}

model Customer {
  id      Int     @id @default(autoincrement())
  name    String  @db.VarChar(100)
  phone   String? @db.VarChar(15)
  address String? @db.Text

  User   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")

  @@map("customer")
}
